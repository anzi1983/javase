1.	简述java封装的步骤以及使用的快捷键？
答：    定义一个实体类
	private 修饰符修饰变量 
	shift+alt快捷键 generate getter and setter 获取getter和setter方法

2.	简述抽象出类的三个步骤？
	先分类 创建类
	总结共有属性
	总结共有方法

3.	构造方法有哪些特点？
	分为有参和无参
	方法名和类名一样
	可以初始化成员变量，调用类对象不赋值时默认调用无参方法，赋值则调用有参方法

4.	什么是方法的重载？
	一个方法不同类型，即方法名一样，参数类型或者个数不同，根据需要调用不同类型的方法

5.	在java的类中this关键词的作用以及用法?
	采用 this 关键字是为了解决实例变量和局部变量之间发生的同名的冲突
	this.成员变量/属性
	this.构造方法
	this.方法
	还有就是注意：this不能用在static方法中！

	1.表示对当前对象的引用！

	2.表示用类的成员变量，而非函数参数，注意在函数参数和成员变量同名是进行区分！其实这是第一种用法的特例，比较常用，所以那出来强调一下。

	3.用于在构造方法中引用满足指定参数类型的构造器（其实也就是构造方法）。但是这里必须非常注意：只能引用一个构造方法且必须位于开始！

6.	简要说明static关键词的作用以及修饰成员时如何分配内存?
	1.用来修饰成员变量，将其变为类的成员，从而实现所有对象对于该成员的共享；
	2.用来修饰成员方法，将其变为类方法，可以直接使用“类名.方法名”的方式调用，常用于工具类；
	3.静态块用法，将多个类成员放在一起初始化，使得程序更加规整，其中理解对象的初始化过程非常关键；
	4.静态导包用法，将类的方法直接导入到当前类中，从而直接使用“方法名”即可调用类方法，更加方便。

	在没有加static修饰符之前，属性属于对象，new不同的对象会分配不同的内存地址，每个变量都有固定的类的属性，在加static之后，属性属于类，属性和方法会统一存在静态存储区，new对象的时候再指向这个静态存储区中的属性和方法，所有不同对象调用加static的属性或者方法的时候相互之间会有影响   比如 对象1对加了static的类属性age进行赋值，然后对象2进行同样的操作，这是对象2的age会覆盖原来对象1所赋的值
	
package com.prictise;

public class StaticDemo {
	/**
	 * static 的用法和含义
	 * 
	 */
	 private static int count = 0;
	/* 上面的代码起到了给StaticDemo的对象创建一个唯一id以及记录总数的作用，
	 其中count由static修饰，是Person类的成员属性，每次创建一个StaticDemo对象，就会使该属性自加1然后赋给对象的id属性，
	 这样，count属性记录了创建StaticDemo对象的总数，由于count使用了private修饰，所以从类外面无法随意改变。
	 这样，不同对象都共享了一个id属性，但通过构造方法使其自动+1再赋值，这样每个对象调用时就不会覆盖之前的id的值
	 */
	  int id;
	String name;
	 int age;				
/*	给age属性加了static关键字之后，StaticDemo对象就不再拥有age属性了
	age属性会统一交给StaticDemo类去管理，即多个StaticDemo对象只会对应一个age属性，
	一个对象如果对age属性做了改变，其他的对象都会受到影响。我们看到此时的age和toString()方法一样，都是交由类去管理*/
	
	 //无参构造方法   new 一个StaticDemo的时候默认调用无参的构造方法
	 public StaticDemo() {
	        id = ++count;
	    }
	 //自定义方法
	/* public String toString() {
	        return "Name:" + name + ", Age:" + age;
	    }*/
	 public String toString() {
	        return "Id:" + id + ", Name:" + name + ", Age:" + age;
	    }
	 //测试用的主方法
	 public static void main(String[] args) {
		 	/*---------没加static
		 	 * 在未加static之前，定义两个对象s1和s2，并进行赋值，此时类的属性(name,age)属于new的对象
		 	 * 而他们共同调用的toString()方法是属于类的
		 	 * 分别对name和age进行赋值，打印
		 	 * 此时打印结果为：
		 	 * Name:zhangsan, Age:10
			 * Name:lisi, Age:12
			 * 
			 * --------加了static
			 * 在给成员变量age加了static之后，这时age属于类，和toString()方法一样，是不同对象共享的一个属性
			 * 就是每new一个对象.age时都会对StaticDemo里的静态属性age进行赋值
			 * 再次进行打印，打印结果为：
			 * Name:zhangsan, Age:12
			 * Name:lisi, Age:12
		 	 */
		 	StaticDemo s1 = new StaticDemo();
		 	s1.name = "zhangsan";
		 	s1.age = 10;
	        StaticDemo s2 = new StaticDemo();
	        s2.name = "lisi";
	        s2.age = 12;
	        System.out.println(s1);
	        System.out.println(s2);
	        
	        System.out.println(count);
		}
}




static 参考：http://www.cnblogs.com/dotgua/p/6354151.html